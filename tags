!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/thecrazygm/github/gweather/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
Main	weather.go	/^	Main struct {$/;"	m	struct:main.WeatherData	typeref:typename:struct { Temp float64 `json:"temp"`; }
Weather	weather.go	/^	Weather []struct {$/;"	m	struct:main.WeatherData	typeref:typename:[]struct { Main string `json:"main"`; }
WeatherData	weather.go	/^type WeatherData struct {$/;"	s	package:main
baseURL	weather.go	/^const baseURL = "http:\/\/api.openweathermap.org\/data\/2.5\/weather"$/;"	c	package:main
getWeather	weather.go	/^func getWeather(apiKey, city, units string) (float64, string, error) {$/;"	f	package:main	typeref:typename:(float64, string, error)
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
main	weather.go	/^package main$/;"	p
